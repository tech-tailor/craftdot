---
- name: Deploy Gunicorn with Ansible
  hosts: development
  tasks: 
    - name: Install Gunicorn package with pip
      ansible.builtin.pip:
        name: gunicorn
        executable: /home/akinniyi/craftdot/.venv/bin/pip3
        state: latest 
      become: yes

    # Create systemd service file for Gunicorn
    - name: Create Gunicorn craftdot_api systemd service file
      copy:
        content: |
          [Unit]
          Description=Gunicorn Daemon for My craftdot Api
          After=network.target
          
          [Service]
          User=gunicorn
          Group=gunicorn
          WorkingDirectory=/home/akinniyi/craftdot
          StandardOutput=journal
          StandardError=journal
          ExecStartPre=/bin/sudo /bin/mkdir -p /var/log/gunicorn /var/run/gunicorn
          ExecStartPre=/bin/sudo /bin/chown -R gunicorn:gunicorn /var/log/gunicorn /var/run/gunicorn
          ExecStartPre=/bin/sudo /bin/chmod -R 777 /var/log/gunicorn 
          ExecStartPre=/bin/sudo /bin/chmod -R 755 /var/run/gunicorn
          ExecStart=/home/akinniyi/craftdot/.venv/bin/gunicorn --config /home/akinniyi/craftdot/craftdot_api_gunicorn_conf.py api.v1.app:app
          ExecReload=/bin/kill -HUP $MAINPID
          ExecStop=/usr/bin/kill -TERM $MAINPID

          Restart=on-failure
          TimeoutStartSec=10

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/craftdot_api_gunicorn.service
      become: true

    # Reload systemd configuration to recognize the new service
    - name: Reload systemd
      ansible.builtin.systemd_service:
        daemon_reload: true
      become: true

    - name: Reload service gunicorn, in all cases
      ansible.builtin.systemd_service:
        name: craftdot_api_gunicorn
        state: reloaded
      become: true


    # Enable Gunicorn service to start on boot
    - name: Enable Gunicorn service
      ansible.builtin.systemd_service:
        name: craftdot_api_gunicorn.service
        enabled: true
      become: true


    

    

    
